"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9368],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5590:(e,t,r)=>{r.d(t,{ZP:()=>s});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const p={toc:[]};function s(e){var{components:t}=e,r=o(e,["components"]);return(0,n.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},p,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"refine")," supports many data providers. To include them in your project, you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"npm install [packageName]")," or you can select the preferred data provider with the ",(0,n.kt)("inlineCode",{parentName:"p"},"npm create refine-app@latest projectName")," during the project creation phase with CLI. This will allow you to easily use these data providers in your project."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/simple-rest"},"Simple REST API")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/graphql"},"GraphQL")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nestjsx-crud"},"NestJS CRUD")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/airtable"},"Airtable")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi"},"Strapi")," - ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi-v4"},"Strapi v4")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi-graphql"},"Strapi GraphQL")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/supabase"},"Supabase")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/hasura"},"Hasura")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/appwrite"},"Appwrite")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/medusa"},"Medusa"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Community \u2764\ufe0f")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/resulturan/refine-firebase"},"Firebase")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/resulturan"},"rturan29")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tspvivek/refine-directus"},"Directus")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tspvivek"},"tspvivek")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar/refine-elide-rest"},"Elide")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/chirdeeptomar"},"chirdeeptomar")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/usegen/refine-use-generated"},"useGenerated")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/usegen"},"usegen"))),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"If you have created a custom data provider and would like to share it with the community, please don't hesitate to get in touch with us. We would be happy to include it on this page for others to use.")))}s.isMDXComponent=!0},79318:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>k,frontMatter:()=>s,metadata:()=>l,toc:()=>c});r(67294);var n=r(3905),a=r(5590);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const s={id:"index",title:"1. Data Provider",tutorial:{order:0,prev:!1,next:"tutorial/understanding-dataprovider/swizzle"}},d=void 0,l={unversionedId:"tutorial/understanding-dataprovider/index",id:"version-3.xx.xx/tutorial/understanding-dataprovider/index",title:"1. Data Provider",description:"The data provider unit is optional for the tutorial and can be skipped to next unit - Adding CRUD PagesAdding CRUD PagesAdding CRUD PagesAdding CRUD PagesAdding CRUD Pages",source:"@site/versioned_docs/version-3.xx.xx/tutorial/2-understanding-dataprovider/0-intro.md",sourceDirName:"tutorial/2-understanding-dataprovider",slug:"/tutorial/understanding-dataprovider/index",permalink:"/docs/3.xx.xx/tutorial/understanding-dataprovider/index",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/versioned_docs/version-3.xx.xx/tutorial/2-understanding-dataprovider/0-intro.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Necati \xd6zmen",lastUpdatedAt:1692347071,formattedLastUpdatedAt:"Aug 18, 2023",sidebarPosition:0,frontMatter:{id:"index",title:"1. Data Provider",tutorial:{order:0,prev:!1,next:"tutorial/understanding-dataprovider/swizzle"}}},u={},c=[{value:"What is data provider?",id:"what-is-data-provider",level:2},{value:"Using Data Providers in refine",id:"using-data-providers-in-refine",level:2},{value:"How are data provider methods used in the app?",id:"how-are-data-provider-methods-used-in-the-app",level:2},{value:"Supported Data Providers",id:"supported-data-providers",level:2}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},f=m("UIConditional"),h=m("Checklist"),g=m("ChecklistItem"),v={toc:c};function k(e){var{components:t}=e,r=p(e,["components"]);return(0,n.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){i(e,t,r[t])}))}return e}({},v,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The data provider unit is optional for the tutorial and can be skipped to next unit - ",(0,n.kt)(f,{is:"headless",mdxType:"UIConditional"},(0,n.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/headless/index"},"Adding CRUD Pages")),(0,n.kt)(f,{is:"antd",mdxType:"UIConditional"},(0,n.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/antd/index"},"Adding CRUD Pages")),(0,n.kt)(f,{is:"mantine",mdxType:"UIConditional"},(0,n.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/mantine/index"},"Adding CRUD Pages")),(0,n.kt)(f,{is:"chakra-ui",mdxType:"UIConditional"},(0,n.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/chakra-ui/index"},"Adding CRUD Pages")),(0,n.kt)(f,{is:"mui",mdxType:"UIConditional"},(0,n.kt)("a",{parentName:"p",href:"/docs/tutorial/adding-crud-pages/mui/index"},"Adding CRUD Pages")),"\nif desired.")),(0,n.kt)("h2",{id:"what-is-data-provider"},"What is data provider?"),(0,n.kt)("p",null,"The\xa0data provider\xa0acts as a data layer for your app that makes the HTTP requests and encapsulates how the data is retrieved. ",(0,n.kt)("strong",{parentName:"p"},"refine")," consumes these methods via data hooks."),(0,n.kt)("p",null,"You don't need worry about creating data providers from scratch. ",(0,n.kt)("strong",{parentName:"p"},"refine")," offers built-in data provider support for the most popular ",(0,n.kt)("a",{parentName:"p",href:"#supported-data-providers"},"API providers"),". So you can use one of them or you can create your own data provider according to your needs."),(0,n.kt)("p",null,"We'll see how to create data provider in the next sections."),(0,n.kt)("p",null,"Data providers can communicate with ",(0,n.kt)("inlineCode",{parentName:"p"},"REST"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"GraphQL"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"RPC"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"SOAP")," based API's. You can imagine the data provider is an adapter between refine and the API."),(0,n.kt)("div",null,(0,n.kt)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/guides-and-concepts/providers/data-provider/tutorial_dataprovider_flog.png"})),(0,n.kt)("br",null),(0,n.kt)("br",null),(0,n.kt)("p",null,"The typical data provider has following methods:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { DataProvider } from "@pankod/refine-core";\n\nconst dataProvider: DataProvider = {\n    create: ({ resource, variables, metaData }) => Promise,\n    deleteOne: ({ resource, id, variables, metaData }) => Promise,\n    getList: ({\n        resource,\n        pagination,\n        hasPagination,\n        sort,\n        filters,\n        metaData,\n    }) => Promise,\n    getOne: ({ resource, id, metaData }) => Promise,\n    update: ({ resource, id, variables, metaData }) => Promise,\n    getApiUrl: () => "",\n    ...\n}\n')),(0,n.kt)("p",null,"These methods are used to perform data operations by ",(0,n.kt)("strong",{parentName:"p"},"refine"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"refine")," comes with different data providers out of the box, but the one we\u2019re interested in and will be using in this tutorial is the\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"refine-simple-rest"),"\xa0data provider, a data provider for communicating with RESTful APIs."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/next/packages/simple-rest"},"Refer to the ",(0,n.kt)("inlineCode",{parentName:"a"},"refine-simple-rest")," source code ","\u2192")),(0,n.kt)("h2",{id:"using-data-providers-in-refine"},"Using Data Providers in refine"),(0,n.kt)("p",null,"In the previous units, we consumed the API and show the data in the auto-generated Inferencer pages. To allow refine to communicate with the API, we registered a data provider using ",(0,n.kt)("inlineCode",{parentName:"p"},"dataProvider")," property of the ",(0,n.kt)("inlineCode",{parentName:"p"},"<Refine>")," component."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'...\nimport dataProvider from "@pankod/refine-simple-rest";\n\n<Refine\n    ...\n    dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n/>;\n')),(0,n.kt)("p",null,"You can refer to the ",(0,n.kt)("strong",{parentName:"p"},"refine")," component ",(0,n.kt)("a",{parentName:"p",href:"/docs/api-reference/core/components/refine-config/#dataprovider"},"dataProvider")," prop documentation for more detailed information."),(0,n.kt)("h2",{id:"how-are-data-provider-methods-used-in-the-app"},"How are data provider methods used in the app?"),(0,n.kt)("p",null,"We use ",(0,n.kt)("strong",{parentName:"p"},"refine's")," data hooks whenever we need to fetch data from the API. These data hooks are connected to data provider methods internally. The required parameters are passed to the data provider methods, and the response from the API is returned."),(0,n.kt)("p",null,"To illustrate this internal connection, imagine we want to get all records from the ",(0,n.kt)("inlineCode",{parentName:"p"},"post")," resource using refine's ",(0,n.kt)("inlineCode",{parentName:"p"},"useList")," data hook."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/pages/posts/index.tsx"',title:'"src/pages/posts/index.tsx"'},'import { useList } from "@pankod/refine-core";\n\nconst postUseListResult = useList({\n    resource: "posts",\n    config: {\n        sort: [\n            {\n                field: "id",\n                order: "desc",\n            },\n        ],\n        filters: [\n            {\n                field: "title",\n                operator: "contains",\n                value: "hello",\n            },\n        ],\n    },\n});\n')),(0,n.kt)("p",null,"As we can see, the parameters passed to the ",(0,n.kt)("inlineCode",{parentName:"p"},"useList")," hook are forwarded to the data provider's ",(0,n.kt)("inlineCode",{parentName:"p"},"getList")," method internally. In the background, ",(0,n.kt)("strong",{parentName:"p"},"refine")," connects all data provider methods to appropriate data hooks."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="dataProvider.ts"',title:'"dataProvider.ts"'},'const dataProvider = {\n    getList: (params) => {\n        console.log(params);\n        /*\n        {\n          "resource": "posts",\n          "sort": [\n            {\n              "field": "id",\n              "order": "desc"\n            }\n          ],\n          "filters": [\n            {\n              "field": "title",\n              "operator": "contains",\n              "value": "hello"\n            }\n          ],\n        }\n        */\n    }\n    ...\n}\n')),(0,n.kt)("h2",{id:"supported-data-providers"},"Supported Data Providers"),(0,n.kt)(a.ZP,{mdxType:"SupportedDataProviders"}),(0,n.kt)(h,{mdxType:"Checklist"},(0,n.kt)(g,{id:"data-provider-intro",mdxType:"ChecklistItem"},"I understood what is data provider and how it works."),(0,n.kt)(g,{id:"data-provider-intro-2",mdxType:"ChecklistItem"},"I learned that refine offers built-in data providers for the most popular systems.")))}k.isMDXComponent=!0}}]);